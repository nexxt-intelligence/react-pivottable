{"version":3,"sources":["src/OptionsMenu.jsx"],"names":["optionsMap","showPercentage","multiLevelMode","OptionsList","props","menuItems","Object","entries","options","display","cursor","closeList","map","itemLabel","item","itemValue","toggleValue","OptionsMenu","state","open","setState","prevState","moveFilterBoxToTop","closeOptionsList","bind","React","Component"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;AACA;;AAEA,IAAMA,aAAa;AACjBC,kBAAgB,iBADC;AAEjBC,kBAAgB;AAFC,CAAnB;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAMC,YAAYC,OAAOC,OAAP,CAAeH,MAAMI,OAArB,CAAlB;;AAEA,SACE;AAAC,4BAAD;AAAA,MAAW,QAAO,gBAAlB;AACE;AAAA;AAAA;AACE,mBAAU,cADZ;AAEE,eAAO;AACLC,mBAAS,OADJ;AAELC,kBAAQ;AAFH;AAFT;AAOE;AAAA;AAAA;AACE,mBAAS,mBAAM;AACbN,kBAAMO,SAAN;AACD,WAHH;AAIE,qBAAU;AAJZ;AAAA;AAAA,OAPF;AAeE;AAAA;AAAA;AAAA;AAAA,OAfF;AAiBE;AAAA;AAAA,UAAK,WAAU,mBAAf;AACGN,kBAAUO,GAAV,CAAc,gBAAQ;AACrB,cAAMC,YAAYC,KAAK,CAAL,CAAlB;AACA,cAAMC,YAAYD,KAAK,CAAL,CAAlB;AACA,iBACE;AAAA;AAAA;AACE,mBAAKD,SADP;AAEE,uBAAS,mBAAM;AACbT,sBAAMY,WAAN,CAAkBH,SAAlB;AACD,eAJH;AAKE,yBAAWE,YAAY,UAAZ,GAAyB;AALtC;AAOGf,uBAAWa,SAAX;AAPH,WADF;AAWD,SAdA;AADH;AAjBF;AADF,GADF;AAuCD;;IAEKI,W;;;AACJ,uBAAYb,KAAZ,EAAmB;AAAA;;AAAA,0HACXA,KADW;;AAEjB,UAAKc,KAAL,GAAa,EAACC,MAAM,KAAP,EAAb;AAFiB;AAGlB;;;;wCAEmB;AAClB,WAAKC,QAAL,CAAc;AAAA,eAAc;AAC1BD,gBAAM,CAACE,UAAUF;AADS,SAAd;AAAA,OAAd;;AAIA,WAAKf,KAAL,CAAWkB,kBAAX,CAA8B,SAA9B;AACD;;;sCAEiB;AAChB,WAAKF,QAAL,CAAc,EAACD,MAAM,IAAP,EAAd;AACD;;;uCAEkB;AACjB,WAAKC,QAAL,CAAc,EAACD,MAAM,KAAP,EAAd;AACD;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AACE,qBAAS,SADX;AAEE,qBAAU,iBAFZ;AAGE,mBAAS,mBAAM;AACb,gBAAI,CAAC,OAAKD,KAAL,CAAWC,IAAhB,EAAsB,OAAKC,QAAL,CAAc,EAACD,MAAM,IAAP,EAAd;AACvB;AALH;AAOE;AAAA;AAAA,YAAM,WAAW,SAAjB;AAAA;AAEE;AAAA;AAAA,cAAM,WAAU,aAAhB;AAAA;AAAA;AAFF,SAPF;AAYG,aAAKD,KAAL,CAAWC,IAAX,GACC,8BAAC,WAAD;AACE,mBAAS,KAAKf,KAAL,CAAWI,OADtB;AAEE,uBAAa,KAAKJ,KAAL,CAAWY,WAF1B;AAGE,qBAAW,KAAKO,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B;AAHb,UADD,GAMG;AAlBN,OADF;AAsBD;;;;EA7CuBC,gBAAMC,S;;kBAgDjBT,W","file":"OptionsMenu.js","sourcesContent":["import React from 'react';\nimport Draggable from 'react-draggable';\n/* eslint-disable  */\n\nconst optionsMap = {\n  showPercentage: 'Show Percentage',\n  multiLevelMode: 'Multi-Level Mode',\n};\n\nfunction OptionsList(props) {\n  const menuItems = Object.entries(props.options);\n\n  return (\n    <Draggable handle=\".pvtDragHandle\">\n      <div\n        className=\"pvtFilterBox\"\n        style={{\n          display: 'block',\n          cursor: 'initial',\n        }}\n      >\n        <a\n          onClick={() => {\n            props.closeList();\n          }}\n          className=\"pvtCloseX\"\n        >\n          ×\n        </a>\n        <h4>Options</h4>\n\n        <div className=\"pvtCheckContainer\">\n          {menuItems.map(item => {\n            const itemLabel = item[0];\n            const itemValue = item[1];\n            return (\n              <p\n                key={itemLabel}\n                onClick={() => {\n                  props.toggleValue(itemLabel);\n                }}\n                className={itemValue ? 'selected' : ''}\n              >\n                {optionsMap[itemLabel]}\n              </p>\n            );\n          })}\n        </div>\n      </div>\n    </Draggable>\n  );\n}\n\nclass OptionsMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {open: false};\n  }\n\n  toggleOptionsList() {\n    this.setState(prevState => ({\n      open: !prevState.open,\n    }));\n\n    this.props.moveFilterBoxToTop('Options');\n  }\n\n  openOptionsList() {\n    this.setState({open: true});\n  }\n\n  closeOptionsList() {\n    this.setState({open: false});\n  }\n\n  render() {\n    return (\n      <li\n        data-id={'options'}\n        className=\"settings-conrol\"\n        onClick={() => {\n          if (!this.state.open) this.setState({open: true});\n        }}\n      >\n        <span className={'pvtAttr'}>\n          Options\n          <span className=\"pvtTriangle\">▾</span>\n        </span>\n\n        {this.state.open ? (\n          <OptionsList\n            options={this.props.options}\n            toggleValue={this.props.toggleValue}\n            closeList={this.closeOptionsList.bind(this)}\n          />\n        ) : null}\n      </li>\n    );\n  }\n}\n\nexport default OptionsMenu;\n"]}