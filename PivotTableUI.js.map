{"version":3,"sources":["src/PivotTableUI.jsx"],"names":["DraggableAttribute","props","state","open","filterText","value","filterProperty","valueFilter","name","text","removeValuesFromFilter","type","addValuesToFilter","x","toLowerCase","trim","includes","e","stopPropagation","filterFieldName","setValuesInFilter","Object","keys","attrValuesB","filter","y","values","showMenu","length","menuLimit","shown","matchesFilter","bind","sort","sorter","options","Array","isArray","property","flatMap","display","cursor","zIndex","moveFilterBoxToTop","setState","map","filterName","toggleValue","filtered","toggleFilterBox","getFilterBox","React","Component","defaultProps","propTypes","PropTypes","string","isRequired","func","object","objectOf","bool","number","Dropdown","toggle","current","r","setValue","PureComponent","PivotTableUI","unusedOrder","zIndices","maxZIndex","openDropdown","materializedInput","materializedInputB","tableOptions","showPercentage","multiLevelMode","toggleTableOption","data","materializeInputB","materializeInput","prevProps","crossTabID","newTableOptions","prevState","nextdata","newState","recordsProcessed","PivotData","forEachRecord","derivedAttributes","record","push","attr","null","optionName","command","onChange","key","sendPropUpdate","$set","attribute","reduce","v","filterTexts","option","$unset","dropdown","items","classes","filterType","stubValueFilter","headerValueFilter","group","ghostClass","preventOnFilter","item","index","find","sorters","rendererCell","unusedAttrs","headers","hiddenAttributes","hiddenFromDragDrop","unusedAttrsCell","makeDnDCell","order","headerAttrs","headerAttrsCell","propUpdater","stubAttrs","stubs","stubAttrsCell","outputCells","assign","arrayOf","hiddenFromAggregators","unusedOrientationCutoff"],"mappings":"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","file":"PivotTableUI.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport {PivotData, sortAs, getSort} from './Utilities';\nimport TableRenderers from './TableRenderers';\nimport Sortable from 'react-sortablejs';\nimport Draggable from 'react-draggable';\nimport OptionsMenu from './OptionsMenu';\n\n/* eslint-disable react/prop-types */\n// eslint can't see inherited propTypes!\n\nexport class DraggableAttribute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      filterText: '',\n    };\n  }\n\n  toggleValue(value) {\n    const filterProperty = this.props.valueFilter;\n    if (\n      this.props.name in filterProperty &&\n      value.text in filterProperty[this.props.name]\n    ) {\n      this.props.removeValuesFromFilter(\n        this.props.name,\n        [value],\n        this.props.type\n      );\n    } else {\n      this.props.addValuesToFilter(this.props.name, [value], this.props.type);\n    }\n  }\n\n  matchesFilter(x) {\n    return x.text\n      .toLowerCase()\n      .trim()\n      .includes(this.state.filterText.toLowerCase().trim());\n  }\n\n  selectOnly(e, value) {\n    e.stopPropagation();\n    const filterFieldName = `${this.props.type}ValueFilter`;\n    this.props.setValuesInFilter(\n      this.props.name,\n      Object.keys(this.props.attrValuesB).filter(y => y !== value),\n      filterFieldName\n    );\n  }\n\n  getFilterBox() {\n    const values = this.props.attrValuesB[this.props.name];\n    const showMenu = values.length < this.props.menuLimit;\n    const shown = values\n      .filter(this.matchesFilter.bind(this))\n      .sort(this.props.sorter);\n\n    const options = Object.values(this.props.attrValuesB)\n      .filter(property => Array.isArray(property))\n      .flatMap(property => property);\n\n    return (\n      <Draggable handle=\".pvtDragHandle\">\n        <div\n          className=\"pvtFilterBox\"\n          style={{\n            display: 'block',\n            cursor: 'initial',\n            zIndex: this.props.zIndex,\n          }}\n          onClick={() => this.props.moveFilterBoxToTop(this.props.name)}\n        >\n          <a onClick={() => this.setState({open: false})} className=\"pvtCloseX\">\n            ×\n          </a>\n          <span className=\"pvtDragHandle\">☰</span>\n          <h4>{this.props.name}</h4>\n\n          {showMenu || <p>(too many values to show)</p>}\n\n          {showMenu && (\n            <div className=\"pvtCheckContainer\">\n              {shown.map(x => {\n                const filterName = this.props.valueFilter[this.props.name];\n                return (\n                  <div\n                    className=\"pvtCheckWrapper\"\n                    onClick={() => this.toggleValue(x)}\n                  >\n                    <label className=\"pvtCheckItem\">\n                      <input\n                        type=\"checkbox\"\n                        defaultChecked={true}\n                        checked={filterName && !filterName[x.text]}\n                      />\n                      <span className=\"checkmark\"></span>\n                      {x.text === '' ? null : x.text}\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </Draggable>\n    );\n  }\n\n  toggleFilterBox() {\n    this.setState({open: !this.state.open});\n    this.props.moveFilterBoxToTop(this.props.name);\n  }\n\n  render() {\n    const filtered =\n      Object.keys(this.props.valueFilter).length !== 0\n        ? 'pvtFilteredAttribute'\n        : '';\n    return (\n      <li data-id={this.props.name}>\n        <span className={'pvtAttr ' + filtered}>\n          <span className=\"pvtHandle\"></span>\n          {this.props.name}{' '}\n          <span\n            className=\"pvtDots\"\n            onClick={this.toggleFilterBox.bind(this)}\n          ></span>\n        </span>\n\n        {this.state.open ? this.getFilterBox() : null}\n      </li>\n    );\n  }\n}\n\nDraggableAttribute.defaultProps = {\n  valueFilter: {},\n};\n\nDraggableAttribute.propTypes = {\n  name: PropTypes.string.isRequired,\n  addValuesToFilter: PropTypes.func.isRequired,\n  removeValuesFromFilter: PropTypes.func.isRequired,\n  attrValuesB: PropTypes.object.isRequired,\n  valueFilter: PropTypes.objectOf(PropTypes.bool),\n  moveFilterBoxToTop: PropTypes.func.isRequired,\n  sorter: PropTypes.func.isRequired,\n  menuLimit: PropTypes.number,\n  zIndex: PropTypes.number,\n};\n\nexport class Dropdown extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"pvtDropdown\" style={{zIndex: this.props.zIndex}}>\n        <div\n          onClick={e => {\n            e.stopPropagation();\n            this.props.toggle();\n          }}\n          className={\n            'pvtDropdownValue pvtDropdownCurrent ' +\n            (this.props.open ? 'pvtDropdownCurrentOpen' : '')\n          }\n          role=\"button\"\n        >\n          <div className=\"pvtDropdownIcon\">{this.props.open ? '×' : '▾'}</div>\n          {this.props.current || <span>&nbsp;</span>}\n        </div>\n\n        {this.props.open && (\n          <div className=\"pvtDropdownMenu\">\n            {this.props.values.map(r => (\n              <div\n                key={r}\n                role=\"button\"\n                onClick={e => {\n                  e.stopPropagation();\n                  if (this.props.current === r) {\n                    this.props.toggle();\n                  } else {\n                    this.props.setValue(r);\n                  }\n                }}\n                className={\n                  'pvtDropdownValue ' +\n                  (r === this.props.current ? 'pvtDropdownActiveValue' : '')\n                }\n              >\n                {r.text}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nclass PivotTableUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unusedOrder: [],\n      zIndices: {},\n      maxZIndex: 1000,\n      openDropdown: false,\n      attrValuesB: {},\n      materializedInput: [],\n      materializedInputB: [],\n      tableOptions: {\n        showPercentage: true,\n        multiLevelMode: false,\n      },\n    };\n\n    this.toggleTableOption = this.toggleTableOption.bind(this);\n  }\n\n  componentDidMount() {\n    if (Array.isArray(this.props.data)) {\n      this.materializeInputB(this.props.data);\n    } else if (this.props.data) {\n      this.materializeInput(this.props.data);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.data !== this.props.data ||\n      prevProps.crossTabID !== this.props.crossTabID\n    ) {\n      this.setState(prevState => {\n        const newTableOptions = prevState.tableOptions;\n        newTableOptions.multiLevelMode = false;\n\n        return {\n          tableOptions: newTableOptions,\n        };\n      });\n    }\n\n    if (Array.isArray(this.props.data)) {\n      this.materializeInputB(this.props.data);\n    } else if (this.props.data) {\n      this.materializeInput(this.props.data);\n    }\n  }\n\n  materializeInput(nextdata) {\n    if (this.state.data === nextdata.data) {\n      return;\n    }\n\n    const newState = {\n      data: nextdata.data,\n      attrValuesB: {},\n      materializedInputB: [],\n    };\n\n    let recordsProcessed = 0;\n    PivotData.forEachRecord(\n      newState.data,\n      this.props.derivedAttributes,\n      function(record) {\n        newState.materializedInputB.push(record);\n        for (const attr of Object.keys(record)) {\n          if (!(attr in newState.attrValuesB)) {\n            newState.attrValuesB[attr] = {};\n            if (recordsProcessed > 0) {\n              newState.attrValuesB[attr].null = recordsProcessed;\n            }\n          }\n        }\n        for (const attr in newState.attrValuesB) {\n          const value = attr in record ? record[attr] : 'null';\n          if (!(value in newState.attrValuesB[attr])) {\n            newState.attrValuesB[attr][value] = 0;\n          }\n          newState.attrValuesB[attr][value]++;\n        }\n        recordsProcessed++;\n      }\n    );\n\n    this.setState(newState);\n  }\n\n  materializeInputB(nextdata) {\n    if (this.state.data === nextdata) {\n      return;\n    }\n\n    const newState = {\n      data: nextdata,\n      attrValuesB: {},\n      materializedInputB: [],\n    };\n\n    let recordsProcessed = 0;\n    PivotData.forEachRecord(\n      newState.data,\n      this.props.derivedAttributes,\n      function(record) {\n        newState.materializedInputB.push(record);\n        for (const attr of Object.keys(record)) {\n          if (!(attr in newState.attrValuesB)) {\n            newState.attrValuesB[attr] = {};\n            if (recordsProcessed > 0) {\n              newState.attrValuesB[attr].null = recordsProcessed;\n            }\n          }\n        }\n        for (const attr in newState.attrValuesB) {\n          const value = attr in record ? record[attr] : 'null';\n          if (!(value in newState.attrValuesB[attr])) {\n            newState.attrValuesB[attr][value] = 0;\n          }\n          newState.attrValuesB[attr][value]++;\n        }\n        recordsProcessed++;\n      }\n    );\n\n    this.setState(newState);\n  }\n\n  toggleTableOption(optionName) {\n    const tableOptions = this.state.tableOptions;\n    tableOptions[optionName] = !tableOptions[optionName];\n\n    this.setState({tableOptions});\n  }\n\n  sendPropUpdate(command) {\n    this.props.onChange(update(this.props, command));\n  }\n\n  propUpdater(key) {\n    return value => this.sendPropUpdate({[key]: {$set: value}});\n  }\n\n  setValuesInFilter(attribute, values, filterFieldName) {\n    this.sendPropUpdate({\n      [filterFieldName]: {\n        [attribute]: {\n          $set: values.reduce((r, v) => {\n            r[v.text] = true;\n            return r;\n          }, {}),\n        },\n      },\n    });\n  }\n\n  addValuesToFilter(attribute, values, type) {\n    const filterFieldName = `${type}ValueFilter`;\n    if (attribute in this.props[filterFieldName]) {\n      this.sendPropUpdate({\n        [filterFieldName]: {\n          [attribute]: values.reduce((r, v) => {\n            r[v.text] = {$set: true};\n            return r;\n          }, {}),\n        },\n      });\n    } else {\n      this.setValuesInFilter(attribute, values, filterFieldName);\n    }\n  }\n\n  removeValuesFromFilter(attribute, values, type) {\n    const filterFieldName = `${type}ValueFilter`;\n    const filterTexts = values.map(option => option.text);\n    this.sendPropUpdate({\n      [filterFieldName]: {[attribute]: {$unset: filterTexts}},\n    });\n  }\n\n  moveFilterBoxToTop(attribute) {\n    this.setState(\n      update(this.state, {\n        maxZIndex: {$set: this.state.maxZIndex + 1},\n        zIndices: {[attribute]: {$set: this.state.maxZIndex + 1}},\n      })\n    );\n  }\n\n  isOpen(dropdown) {\n    return this.state.openDropdown === dropdown;\n  }\n\n  makeDnDCell(items, onChange, classes, type) {\n    const filterType =\n      type === 'stub'\n        ? this.props.stubValueFilter\n        : this.props.headerValueFilter;\n\n    return (\n      <Sortable\n        options={{\n          group: 'shared',\n          ghostClass: 'pvtPlaceholder',\n          filter: '.pvtFilterBox',\n          preventOnFilter: false,\n        }}\n        tag=\"td\"\n        className={classes}\n        onChange={onChange}\n      >\n        {items.map((item, index) => (\n          <DraggableAttribute\n            name={item}\n            key={item}\n            attrValuesB={\n              Array.isArray(this.state.data)\n                ? this.state.data.find(\n                    record => Object.keys(record)[0] === item\n                  )\n                : {}\n            }\n            valueFilter={filterType}\n            sorter={getSort(this.props.sorters, index)}\n            menuLimit={this.props.menuLimit}\n            setValuesInFilter={this.setValuesInFilter.bind(this)}\n            addValuesToFilter={this.addValuesToFilter.bind(this)}\n            moveFilterBoxToTop={this.moveFilterBoxToTop.bind(this)}\n            removeValuesFromFilter={this.removeValuesFromFilter.bind(this)}\n            type={type}\n            zIndex={this.state.zIndices[item] || this.state.maxZIndex}\n          />\n        ))}\n      </Sortable>\n    );\n  }\n\n  render() {\n    const rendererCell = (\n      <td className=\"settings-cell\" rowSpan=\"2\">\n        <OptionsMenu\n          moveFilterBoxToTop={this.moveFilterBoxToTop.bind(this)}\n          toggleValue={this.toggleTableOption}\n          options={this.state.tableOptions}\n        />\n      </td>\n    );\n\n    const unusedAttrs = Object.keys(this.state.attrValuesB)\n      .filter(\n        e =>\n          !this.props.headers.includes(e) &&\n          !this.props.hiddenAttributes.includes(e) &&\n          !this.props.hiddenFromDragDrop.includes(e) &&\n          e !== 'id'\n      )\n      .sort(sortAs(this.state.unusedOrder));\n\n    const unusedAttrsCell = this.makeDnDCell(\n      unusedAttrs,\n      order => this.setState({unusedOrder: order}),\n      `pvtAxisContainer pvtUnused ${'pvtHorizList'}`,\n      'header'\n    );\n\n    const headerAttrs = this.props.headers.filter(\n      e =>\n        !this.props.hiddenAttributes.includes(e) &&\n        !this.props.hiddenFromDragDrop.includes(e)\n    );\n\n    const headerAttrsCell = this.makeDnDCell(\n      headerAttrs,\n      this.propUpdater('headers'),\n      'pvtAxisContainer pvtHorizList pvtCols',\n      'header'\n    );\n\n    const stubAttrs = this.props.stubs.filter(\n      e =>\n        !this.props.hiddenAttributes.includes(e) &&\n        !this.props.hiddenFromDragDrop.includes(e)\n    );\n    const stubAttrsCell = this.makeDnDCell(\n      stubAttrs,\n      this.propUpdater('stubs'),\n      'pvtAxisContainer pvtVertList pvtRows',\n      'stub'\n    );\n\n    const outputCells = (\n      <TableRenderers\n        {...this.props}\n        settings={this.state.tableOptions}\n        multiLevelMode={this.state.tableOptions.multiLevelMode}\n      />\n    );\n\n    return (\n      <table className=\"pvtUi\">\n        <tbody onClick={() => this.setState({openDropdown: false})}>\n          <tr>\n            {rendererCell}\n            {unusedAttrsCell}\n          </tr>\n          <tr>{headerAttrsCell}</tr>\n          <tr>\n            {stubAttrsCell}\n            {outputCells}\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPivotTableUI.propTypes = Object.assign({}, PivotData.propTypes, {\n  onChange: PropTypes.func.isRequired,\n  hiddenAttributes: PropTypes.arrayOf(PropTypes.string),\n  hiddenFromAggregators: PropTypes.arrayOf(PropTypes.string),\n  hiddenFromDragDrop: PropTypes.arrayOf(PropTypes.string),\n  unusedOrientationCutoff: PropTypes.number,\n  menuLimit: PropTypes.number,\n});\n\nPivotTableUI.defaultProps = Object.assign({}, PivotData.defaultProps, {\n  hiddenAttributes: [],\n  hiddenFromAggregators: [],\n  hiddenFromDragDrop: [],\n  unusedOrientationCutoff: 85,\n  menuLimit: 500,\n});\n\nexport default PivotTableUI;\n"]}